default_install_hook_types: [pre-commit, pre-push, commit-msg]
default_stages: [pre-commit]


repos:
  ### General checks and fixes for common issues in files
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v5.0.0
  hooks:
  - id: check-yaml                  # Checks YAML syntax
  - id: check-toml                  # Checks TOML syntax
  - id: check-json                  # Checks JSON syntax
  - id: requirements-txt-fixer      # Fixes formatting in requirements.txt
  - id: end-of-file-fixer           # Ensures files end with a newline
  - id: trailing-whitespace         # Removes trailing whitespace
  - id: check-merge-conflict        # Checks for unresolved merge conflicts
  - id: check-json                  # Checks JSON syntax
  - id: check-added-large-files     # Prevents large files from being added
  - id: check-case-conflict         # Checks for case conflicts in filenames
  - id: check-illegal-windows-names     # Checks for illegal Windows filenames
  - id: no-commit-to-branch         # Prevents direct commits to main
  - id: check-executables-have-shebangs     # Checks for shebangs in executable files

  ### Check pre-commit hook versions
- repo: https://github.com/pre-commit/sync-pre-commit-deps
  rev: v0.0.3
  hooks:
  - id: sync-pre-commit-deps

  ### Formatting Hooks (pre-commit stage)
- repo: https://github.com/pycqa/isort
  rev: 6.0.1
  hooks:
  - id: isort                       # Sorts Python imports
- repo: https://github.com/ikamensh/flynt/
  rev: 1.0.1
  hooks:
  - id: flynt                      # Formats Python f-strings

- repo: https://github.com/kynan/nbstripout
  rev: 0.8.1
  hooks:
  - id: nbstripout                  # Strips outputs from Jupyter notebooks

- repo: https://github.com/asottile/pyupgrade
  rev: v3.19.1
  hooks:
  - id: pyupgrade                   # Upgrades Python syntax to specified version
    args: [--py310-plus]

- repo: https://github.com/psf/black
  rev: 25.1.0
  hooks:
  - id: black                       # Formats Python code
    additional_dependencies:
    - black[jupyter]
    types_or: [python, pyi, jupyter]

- repo: https://github.com/PyCQA/docformatter
  rev: master
  hooks:
  - id: docformatter                # Formats docstrings
    additional_dependencies:
    - docformatter[tomli]           # Config via pyproject.toml
    args: [--in-place, --config, ./pyproject.toml]

- repo: https://github.com/adamchainz/blacken-docs
  rev: 1.19.1
  hooks:
  - id: blacken-docs                # Formats Python code blocks in markdown files
    additional_dependencies:
    - black==25.1.0

- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.14.0
  hooks:
  - id: pretty-format-toml          # Formats TOML files
    args: [--autofix]
  - id: pretty-format-yaml          # Formats YAML files
    args: [--autofix]

# - repo: https://github.com/asottile/yesqa
#   rev: v1.5.0
#   hooks:
#   - id: yesqa

  ### Linting Hooks (pre-push stage)
- repo: https://github.com/pycqa/flake8
  rev: 7.1.2
  hooks:
  - id: flake8                      # Comprehensive Python linting
    additional_dependencies:
    - flake8-eradicate
    - flake8-bugbear
    - flake8-simplify
    - flake8-builtins
    - flake8-comprehensions
    - flake8-use-fstring
    - flake8-docstrings
    - flake8-rst-docstrings
    - flake8-blind-except
    - flake8-requirements
    - flake8-deprecated
    - pep8-naming
    - darglint
    - flake8-warnings
    - flake8-pie
    - flake8-annotations
    - flake8-annotations-complexity
    - flake8-return
    - flake8-pytest-style
    - Flake8-pyproject
    # stages: [pre-push]

- repo: https://github.com/nbQA-dev/nbQA
  rev: 1.9.1
  hooks:
  - id: nbqa-flake8                 # Runs flake8 on Jupyter notebooks
    args: ['--ignore=E402,D100']
    additional_dependencies:
    - flake8-eradicate
    - flake8-bugbear
    - flake8-simplify
    - flake8-builtins
    - flake8-comprehensions
    - flake8-use-fstring
    - flake8-docstrings
    - flake8-rst-docstrings
    - flake8-blind-except
    - flake8-requirements
    - pep8-naming
    - darglint
    - flake8-warnings
    - flake8-pie
    - flake8-return
    - Flake8-pyproject
    # stages: [pre-push]
  - id: nbqa-pyupgrade              # Runs pyupgrade on notebooks
    # stages: [pre-push]

- repo: https://github.com/pre-commit/pygrep-hooks
  rev: v1.10.0    # Use the ref you want to point at
  hooks:
  - id: python-check-blanket-noqa     # Checks for blanket noqa comments
  # - id: python-check-blanket-type-ignore     # Checks for blanket type ignore comments
  - id: rst-backticks                # Checks for single backticks in reStructuredText
  - id: rst-directive-colons         # Checks for correct colons in reStructuredText directives
  - id: rst-inline-touching-normal     # Checks for inline code touching normal text in reStructuredText

- repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.44.0
  hooks:
  - id: markdownlint-fix            # Lints and fixes markdown files
    args: [--disable, 'md013,md034,md033,md036']
    # stages: [pre-push]

- repo: https://github.com/rstcheck/rstcheck
  rev: v6.2.4
  hooks:
  - id: rstcheck                    # Checks reStructuredText files
    additional_dependencies:
    - rstcheck[sphinx]
    - rstcheck[toml]
    # stages: [pre-push]

- repo: https://github.com/python-jsonschema/check-jsonschema
  rev: 0.31.3
  hooks:
  - id: check-gitlab-ci             # Validates GitLab CI configuration
    args: [--disable-formats, regex]
    # stages: [pre-push]
  - id: check-readthedocs           # Checks ReadTheDocs configuration
    # stages: [pre-push]

- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.15.0
  hooks:
  - id: mypy                        # Runs mypy type checking
    exclude: ^((?!src).)*$
    # stages: [pre-push]

- repo: https://github.com/commitizen-tools/commitizen
  rev: v4.4.1
  hooks:
  - id: commitizen                  # Checks commit messages
    stages: [commit-msg]
  - id: commitizen-branch           # Checks branch commit messages
    stages: [pre-push]

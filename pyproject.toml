[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core>=3.4"]

[project]
authors = [{name = "Daniel Marshall"}, {name = "Elie Farah"}, {name = "Eric Musselman"}]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent"
]
# TODO figure out how to check NEURON v8.2.4+ as a dependency on win
dependencies = [
  "matplotlib",
  "multiprocess",
  # "neuron",
  "numpy",
  "pandas",
  "scipy",
  "seaborn",
  "nd_line",
  "aenum",
  "importlib_metadata"
]
description = "Modeling stimulation of peripheral nerve fibers"
keywords = ["stimulation", "modeling", "computational", "fibers", "peripheral nerve"]
license = {file = "LICENSE"}
name = "pyfibers"
readme = "README.md"
requires-python = ">=3.10"
version = "0.1.dev1"  # This is the only place version should be hard coded

[project.optional-dependencies]
dev = [
  "mock==4.0.*",
  "pre-commit==2.20.*",
  "pytest==7.1.*",
  "pytest-cov==3.0.*",
  "pytest-sugar",
  "sphinx==4.5.*",
  "sphinx-rtd-theme",
  "myst-parser",
  "nbsphinx",
  "sphinx-copybutton",
  "sphinx-rtd-dark-mode",
  "moviepy",
  "IPython",
  "enum-tools[sphinx]"
]

[project.scripts]
pyfibers_compile = "pyfibers.compile:main"

[project.urls]

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  "def __str__",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:"
]
ignore_errors = true

# coverage controls
[tool.coverage.run]
branch = true
parallel = true
source = ["pyfibers"]

[tool.docformatter]
in-place = true
wrap-descriptions = 0
wrap-summaries = 0

[tool.flynt]
line-length = 120

[tool.isort]
add_imports = ["from __future__ import annotations"]
append_only = true
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
multi_line_output = 3
use_parentheses = true

[tool.mypy]
# exclude docs directory
exclude = ["docs", "tests"]
explicit_package_bases = true
ignore_missing_imports = true
implicit_optional = true
no_strict_optional = true

[tool.rstcheck]
ignore_directives = [
  "automodule"
]
